apiVersion: v1
kind: Service
metadata:
  name: routr
  labels:
    app: routr
spec:
  type: NodePort
  externalTrafficPolicy: Local # This will cause the load balancer to send the client ip
  externalIPs: [192.168.1.149]
  ports:
  - name: sip
    port: 5060
  - name: https
    port: 4567
  selector:
    app: routr
    tier: sip
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: routr
  labels:
    app: routr
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: routr
        tier: sip
    spec:
      containers:
      - name: routr
        image: fonoster/routr
        imagePullPolicy: Always
        command: ['/bin/sh']
        args: ['-c', 'sh /opt/routr/entrypoint.sh']
        env:
        - name: ROUTR_DS_PROVIDER
          value: redis_data_provider
        - name: ROUTR_DS_PARAMETERS
          value: host=redis,port=6379
        - name: ROUTR_EXTERN_ADDR
          value: 192.168.1.149
        ports:
         - containerPort: 5060
           name: sip
         - containerPort: 4567
           name: https
        volumeMounts:
          - name: entrypoint
            mountPath: /opt/routr/entrypoint.sh
            subPath: entrypoint.sh
      volumes:
      - name: entrypoint
        configMap:
          name: entrypoint
