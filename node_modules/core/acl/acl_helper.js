'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
author Pedro Sanders
since v1



var _acl_rule = require('core/acl/acl_rule');

var _acl_rule2 = _interopRequireDefault(_acl_rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Helps verify if a device is allow or not to REGISTER and place calls.
 *
 * Rules may be in CIDR, IP/Mask, or single IP format. Example
 * of rules are:
 *
 * acl:
 *  deny:
 *      0.0.0.0/1   # deny all
 *  allow
 *    - 192.168.1.0/255.255.255.0
 *    - 192.168.0.1/31
 */
var ACLHelper = function () {
    function ACLHelper() {
        _classCallCheck(this, ACLHelper);
    }

    _createClass(ACLHelper, null, [{
        key: 'mostSpecific',
        value: function mostSpecific(ip, rules) {
            var r = rules.stream().filter(function (rule) {
                return rule.hasIp(ip);
            }).sorted(function (r1, r2) {
                return java.lang.Long.compare(r1.getAddressCount(), r2.getAddressCount());
            }).findFirst();

            return r.isPresent() ? r.get() : new _acl_rule2.default('0.0.0.0/0', 'deny');
        }
    }]);

    return ACLHelper;
}();

exports.default = ACLHelper;