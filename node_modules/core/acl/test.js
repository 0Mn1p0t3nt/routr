'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.testGroup = undefined;

var _acl_util = require('core/acl/acl_util');

var _acl_util2 = _interopRequireDefault(_acl_util);

var _acl_rule = require('core/acl/acl_rule');

var _acl_rule2 = _interopRequireDefault(_acl_rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @author Pedro Sanders
 * @since v1
 *
 * Unit Test for the "Utils Module"
 */
var testGroup = exports.testGroup = { name: "Access Control List Submodule"

    // Tests
};testGroup.rules = function () {
    var rule = new _acl_rule2.default('10.0.0.1/28', 'allow');
    assertEquals(16, rule.getAddressCount());
    assertTrue(rule.hasIp('10.0.0.4'));
    assertEquals('allow', rule.action);

    rule = new _acl_rule2.default('0.0.0.0/0', 'allow');
    assertTrue(rule.hasIp('10.0.0.4'));
    assertTrue(rule.hasIp('192.168.0.16'));
};

// Tests
testGroup.is_network_allowed = function () {
    var accessControlList = {
        allow: ['192.168.0.1/28'],
        deny: ['192.168.0.4']
    };

    var aclUtil = new _acl_util2.default(accessControlList);

    assertTrue(aclUtil.isIpAllowed('192.168.0.1'));
    assertTrue(aclUtil.isIpAllowed('192.168.0.14'));
    assertFalse(aclUtil.isIpAllowed('192.168.0.4'));
    assertFalse(aclUtil.isIpAllowed('192.168.0.16'));
};