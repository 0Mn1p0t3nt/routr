'use strict';

var _server = require('core/server');

var _server2 = _interopRequireDefault(_server);

var _locator = require('location/locator.js');

var _locator2 = _interopRequireDefault(_locator);

var _registrar = require('registrar/registrar');

var _registrar2 = _interopRequireDefault(_registrar);

var _users_api = require('data_api/users_api');

var _users_api2 = _interopRequireDefault(_users_api);

var _agents_api = require('data_api/agents_api');

var _agents_api2 = _interopRequireDefault(_agents_api);

var _domains_api = require('data_api/domains_api');

var _domains_api2 = _interopRequireDefault(_domains_api);

var _peers_api = require('data_api/peers_api');

var _peers_api2 = _interopRequireDefault(_peers_api);

var _gateways_api = require('data_api/gateways_api');

var _gateways_api2 = _interopRequireDefault(_gateways_api);

var _dids_api = require('data_api/dids_api');

var _dids_api2 = _interopRequireDefault(_dids_api);

var _files_datasource = require('data_api/files_datasource');

var _files_datasource2 = _interopRequireDefault(_files_datasource);

var _redis_datasource = require('data_api/redis_datasource');

var _redis_datasource2 = _interopRequireDefault(_redis_datasource);

var _restful_datasource = require('data_api/restful_datasource');

var _restful_datasource2 = _interopRequireDefault(_restful_datasource);

var _config_util = require('core/config_util.js');

var _config_util2 = _interopRequireDefault(_config_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Avoids old log4j and jetty logs

// Data sources

// Default Data Provider (from files)
java.lang.System.setProperty("org.eclipse.jetty.LEVEL", "WARN"); /**
                                                                  * @author Pedro Sanders
                                                                  * @since v1
                                                                  */

org.apache.log4j.BasicConfigurator.configure(new org.apache.log4j.varia.NullAppender());

var config = (0, _config_util2.default)();
var dataSource = void 0;

if (config.spec.dataSource.provider == 'files_data_provider') {
    dataSource = new _files_datasource2.default();
} else if (config.spec.dataSource.provider == 'restful_data_provider') {
    dataSource = new _restful_datasource2.default();
} else if (config.spec.dataSource.provider == 'redis_data_provider') {
    dataSource = new _redis_datasource2.default();
} else {
    print('Invalid data source');
    exit(1);
}

var dataAPIs = {
    UsersAPI: new _users_api2.default(dataSource),
    AgentsAPI: new _agents_api2.default(dataSource),
    DomainsAPI: new _domains_api2.default(dataSource),
    DIDsAPI: new _dids_api2.default(dataSource),
    GatewaysAPI: new _gateways_api2.default(dataSource),
    PeersAPI: new _peers_api2.default(dataSource)
};

var locator = new _locator2.default(dataAPIs);
var registrar = new _registrar2.default(locator, dataAPIs);
new _server2.default(locator, registrar, dataAPIs).start();