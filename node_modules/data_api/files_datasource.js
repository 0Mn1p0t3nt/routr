'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
author Pedro Sanders
since v1



var _status = require('core/status');

var _config_util = require('core/config_util');

var _config_util2 = _interopRequireDefault(_config_util);

var _obj_util = require('utils/obj_util');

var _obj_util2 = _interopRequireDefault(_obj_util);

var _utils = require('data_api/utils');

var _utils2 = _interopRequireDefault(_utils);

var _files_util = require('utils/files_util');

var _files_util2 = _interopRequireDefault(_files_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var JsonPath = Packages.com.jayway.jsonpath.JsonPath;
var System = Packages.java.lang.System;

var FilesDataSource = function () {
    function FilesDataSource() {
        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _config_util2.default)();

        _classCallCheck(this, FilesDataSource);

        if (System.getenv("ROUTR_DS_PARAMETERS") != null) {
            config.spec.dataSource.parameters = {};
            var key = System.getenv("ROUTR_DS_PARAMETERS").split("=")[0];
            if (key == 'path') {
                config.spec.dataSource.parameters.path = System.getenv("ROUTR_DS_PARAMETERS").split("=")[1];
            }
        }

        if (!config.spec.dataSource.parameters) {
            config.spec.dataSource.parameters = {};
            config.spec.dataSource.parameters.path = 'config';
        }

        this.filesPath = config.spec.dataSource.parameters.path;
    }

    _createClass(FilesDataSource, [{
        key: 'withCollection',
        value: function withCollection(collection) {
            this.collection = collection;
            return this;
        }
    }, {
        key: 'insert',
        value: function insert() {
            return {
                status: _status.Status.NOT_SUPPORTED,
                message: _status.Status.message[_status.Status.NOT_SUPPORTED].value
            };
        }
    }, {
        key: 'get',
        value: function get() {
            return {
                status: _status.Status.NOT_SUPPORTED,
                message: _status.Status.message[_status.Status.NOT_SUPPORTED].value
            };
        }
    }, {
        key: 'find',
        value: function find() {
            var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';

            if (!(0, _obj_util2.default)(filter) && !filter.equals('*')) {
                filter = "*.[?(" + filter + ")]";
            }

            var list = [];

            try {
                var resource = _utils2.default.convertToJson(_files_util2.default.readFile(this.filesPath + '/' + this.collection + '.yml'));

                // JsonPath does not parse properly when using Json objects from JavaScript
                if ((0, _obj_util2.default)(resource) == false) {
                    list = JSON.parse(JsonPath.parse(JSON.stringify(resource)).read(filter).toJSONString());
                }

                if ((0, _obj_util2.default)(list)) {
                    return FilesDataSource.emptyResult();
                }
            } catch (e) {
                if (e instanceof Packages.java.nio.file.NoSuchFileException || e instanceof Packages.com.fasterxml.jackson.databind.JsonMappingException) {
                    return FilesDataSource.emptyResult();
                }

                return {
                    status: _status.Status.BAD_REQUEST,
                    message: _status.Status.message[_status.Status.BAD_REQUEST].value
                };
            }

            return {
                status: _status.Status.OK,
                message: _status.Status.message[_status.Status.OK].value,
                result: FilesDataSource.getWithReferences(list)
            };
        }
    }, {
        key: 'update',
        value: function update() {
            return {
                status: _status.Status.NOT_SUPPORTED,
                message: _status.Status.message[_status.Status.NOT_SUPPORTED].value
            };
        }
    }, {
        key: 'remove',
        value: function remove() {
            return {
                status: _status.Status.NOT_SUPPORTED,
                message: _status.Status.message[_status.Status.NOT_SUPPORTED].value
            };
        }
    }], [{
        key: 'emptyResult',
        value: function emptyResult() {
            return {
                status: _status.Status.OK,
                message: _status.Status.message[_status.Status.OK].value,
                result: []
            };
        }
    }, {
        key: 'getWithReferences',
        value: function getWithReferences(list) {
            list.forEach(function (obj) {
                if (!obj.metadata.ref) {
                    if (obj.kind.equals('Agent')) {
                        obj.metadata.ref = 'ag' + FilesDataSource.generateRef(obj.spec.credentials.username + obj.spec.domains[0]);
                    } else if (obj.kind.equals('Domain')) {
                        obj.metadata.ref = 'dm' + FilesDataSource.generateRef(obj.spec.context.domainUri);
                    } else if (obj.kind.equals('Peer')) {
                        obj.metadata.ref = 'pr' + FilesDataSource.generateRef(obj.spec.credentials.username);
                    } else if (obj.kind.equals('Gateway')) {
                        obj.metadata.ref = 'gw' + FilesDataSource.generateRef(obj.spec.host);
                    } else if (obj.kind.equals('DID')) {
                        obj.metadata.ref = 'dd' + FilesDataSource.generateRef(obj.spec.location.telUrl);
                    } else if (obj.kind.equals('User')) {
                        obj.metadata.ref = 'us' + FilesDataSource.generateRef(obj.spec.credentials.username);
                    }
                }
            });
            return list;
        }
    }, {
        key: 'generateRef',
        value: function generateRef(uniqueFactor) {
            var md5 = java.security.MessageDigest.getInstance("MD5");
            md5.update(java.nio.charset.StandardCharsets.UTF_8.encode(uniqueFactor));
            var hash = java.lang.String.format("%032x", new java.math.BigInteger(1, md5.digest()));
            return hash.substring(hash.length() - 6).toLowerCase();
        }
    }]);

    return FilesDataSource;
}();

exports.default = FilesDataSource;