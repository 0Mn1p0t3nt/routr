'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
author Pedro Sanders
since v1



var _utils = require('core/utils');

var _utils2 = _interopRequireDefault(_utils);

var _utils3 = require('data_api/utils');

var _utils4 = _interopRequireDefault(_utils3);

var _config_util = require('core/config_util');

var _config_util2 = _interopRequireDefault(_config_util);

var _status = require('core/status');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var URLEncoder = Packages.java.net.URLEncoder;
var Unirest = Packages.com.mashape.unirest.http.Unirest;
var LogManager = Packages.org.apache.logging.log4j.LogManager;
var LOG = LogManager.getLogger();
var badRequest = { status: _status.Status.BAD_REQUEST, message: _status.Status.message[_status.Status.BAD_REQUEST].value };
var defaultRestfulParams = { baseUrl: 'http://localhost:8080/v1/ctl', username: 'admin', secret: 'changeit' };

var RestfulDataSource = function () {
    function RestfulDataSource() {
        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _config_util2.default)();

        _classCallCheck(this, RestfulDataSource);

        var parameters = _utils4.default.getParameters(config, defaultRestfulParams, ['baseUrl', 'username', 'secret']);

        if (!parameters.baseUrl || !parameters.username || !parameters.secret) {
            LOG.error("Restful Data Source incorrectly configured.\nYou must specify the baseUrl, username and secret when using this data provider");
            exit(1);
        }

        this.baseUrl = parameters.baseUrl;
        this.username = parameters.username;
        this.secret = parameters.secret;
    }

    _createClass(RestfulDataSource, [{
        key: 'withCollection',
        value: function withCollection(collection) {
            this.collection = collection;
            return this;
        }
    }, {
        key: 'save',
        value: function save(obj, method) {
            var ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

            try {
                if (obj != 'noobj' && _utils4.default.isValidEntity(obj) == false) {
                    return badRequest;
                }

                var path = obj == 'noobj' ? '/' + this.collection + ref : '/' + obj.kind.toString().toLowerCase() + 's' + ref;
                var r = method(this.baseUrl + path).header("Content-Type", "application/json").basicAuth(this.username, this.secret).body(JSON.stringify(obj)).asString();
                return JSON.parse(r.getBody());
            } catch (e) {
                return _utils2.default.buildErrResponse(e);
            }
        }
    }, {
        key: 'insert',
        value: function insert(obj) {
            return this.save(obj, Unirest.post);
        }
    }, {
        key: 'get',
        value: function get(ref) {
            try {
                var r = Unirest.get(this.baseUrl + '/' + this.collection + '/' + ref).basicAuth(this.username, this.secret).asString();
                return JSON.parse(r.getBody());
            } catch (e) {
                return buildErrorResponse(e);
            }
        }
    }, {
        key: 'find',
        value: function find() {
            var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "*";

            try {
                var r = Unirest.get(this.baseUrl + '/' + this.collection + '?filter=' + URLEncoder.encode(filter)).basicAuth(this.username, this.secret).asString();

                var response = JSON.parse(r.getBody());

                return response.status != _status.Status.OK ? _utils2.default.buildResponse(response.status, []) : response;
            } catch (e) {
                return _utils2.default.buildErrResponse(e);
            }
        }
    }, {
        key: 'update',
        value: function update(obj) {
            return this.save(obj, Unirest.put, '/' + obj.metadata.ref);
        }
    }, {
        key: 'remove',
        value: function remove(ref) {
            return this.save('noobj', Unirest.delete, '/' + ref);
        }
    }]);

    return RestfulDataSource;
}();

exports.default = RestfulDataSource;