'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
author Pedro Sanders
since v1



var _utils = require('core/utils');

var _utils2 = _interopRequireDefault(_utils);

var _files_util = require('utils/files_util');

var _files_util2 = _interopRequireDefault(_files_util);

var _status = require('core/status');

var _obj_util = require('utils/obj_util');

var _obj_util2 = _interopRequireDefault(_obj_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var System = Packages.java.lang.System;
var LogManager = Packages.org.apache.logging.log4j.LogManager;
var LOG = LogManager.getLogger();
var YAMLFactory = Packages.com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
var JsonSchemaFactory = Packages.com.networknt.schema.JsonSchemaFactory;
var ObjectMapper = Packages.com.fasterxml.jackson.databind.ObjectMapper;
var schemaPath = 'etc/schemas';

var DSUtil = function () {
    function DSUtil() {
        _classCallCheck(this, DSUtil);
    }

    _createClass(DSUtil, null, [{
        key: 'convertToJson',
        value: function convertToJson(yamlStr) {
            var yamlReader = new ObjectMapper(new YAMLFactory());
            var mapper = new ObjectMapper();
            var obj = yamlReader.readValue(yamlStr, java.lang.Object.class);
            return JSON.parse(mapper.writeValueAsString(obj));
        }
    }, {
        key: 'isValidEntity',
        value: function isValidEntity(obj) {
            var kind = void 0;
            try {
                kind = DSUtil.getKind(obj);
            } catch (e) {
                return false;
            }

            var factory = JsonSchemaFactory.getInstance();
            var mapper = new ObjectMapper();

            // The validator expects an array
            if (!Array.isArray(obj)) {
                var o = [];
                o.push(obj);
                obj = o;
            }

            var schema = factory.getSchema(_files_util2.default.readFile(schemaPath + '/' + kind.toLowerCase() + 's_schema.json'));
            var node = mapper.readTree(JSON.stringify(obj));
            var errors = schema.validate(node);

            if (errors.size() > 0) {
                var i = errors.iterator();
                LOG.warn('We found some errors in your resource ' + node);
                while (i.hasNext()) {
                    LOG.warn(i.next());
                }
                return false;
            }

            return true;
        }
    }, {
        key: 'isValidJson',
        value: function isValidJson(str) {
            try {
                JSON.parse(str);
            } catch (e) {
                return false;
            }
            return true;
        }
    }, {
        key: 'getKind',
        value: function getKind(obj) {
            if (['user', 'agent', 'peer', 'domain', 'gateway', 'did'].indexOf(obj.kind.toLowerCase()) == -1) {
                throw "Not a valid entity. `kind` must be: User, Agent, Peer, Domain, Gateway, DID";
            }
            return obj.kind;
        }
    }, {
        key: 'deepSearch',
        value: function deepSearch(response, path, value) {
            var result = void 0;
            response.result.forEach(function (obj) {
                if (DSUtil.resolve(path, obj) == value) {
                    result = obj;
                }
            });
            return (0, _obj_util2.default)(result) ? _utils2.default.buildResponse(_status.Status.NOT_FOUND) : _utils2.default.buildResponse(_status.Status.OK, result);
        }
    }, {
        key: 'objExist',
        value: function objExist(response) {
            return response.status == _status.Status.OK ? true : false;
        }
    }, {
        key: 'transformFilter',
        value: function transformFilter() {
            var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';

            return !(0, _obj_util2.default)(filter) && !filter.equals('*') ? "*.[?(" + filter + ")]" : filter;
        }
    }, {
        key: 'resolve',
        value: function resolve(path, obj) {
            return path.split('.').reduce(function (prev, curr) {
                return prev ? prev[curr] : null;
            }, obj || self);
        }
    }, {
        key: 'getParameters',
        value: function getParameters(config, defaultParameters, allowedKeys) {
            var parameters = (0, _obj_util2.default)(config.spec.dataSource.parameters) == false ? config.spec.dataSource.parameters : defaultParameters;

            if (System.getenv("ROUTR_DS_PARAMETERS") != null) {
                parameters = DSUtil.getFromEnv(System.getenv("ROUTR_DS_PARAMETERS"), allowedKeys);
            }

            return parameters;
        }
    }, {
        key: 'getFromEnv',
        value: function getFromEnv(params, allowedKeys) {
            var parameters = {};
            params.split(",").forEach(function (par) {
                var key = par.split("=")[0];
                var value = par.split("=")[1];
                allowedKeys.indexOf(key) == -1 ? LOG.warn('Invalid parameter: ' + key) : parameters[key] = value;
            });
            return parameters;
        }
    }]);

    return DSUtil;
}();

exports.default = DSUtil;