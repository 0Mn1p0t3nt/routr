'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = AuthHelper;
/**
 * @author Pedro Sanders
 * @since v1
 */
function AuthHelper(headerFactory) {
    var _this = this;

    var DigestUtils = Packages.org.apache.commons.codec.digest.DigestUtils;
    var MessageDigest = Packages.java.security.MessageDigest;
    var Long = Packages.java.lang.Long;
    var Random = Packages.java.util.Random;
    var DEFAULT_ALGORITHM = 'MD5';

    this.calcFromHeader = function (a) {
        return _this.calculateResponse(a.username, a.secret, a.realm, a.nonce, a.nc, a.cnonce, a.uri, a.method, a.qop);
    };

    this.calculateResponse = function (username, secret, realm, nonce, nc, cnonce, uri, method, qop) {
        var a1 = username + ':' + realm + ':' + secret;
        var a2 = method.toUpperCase() + ':' + uri;
        var ha1 = DigestUtils.md5Hex(a1);
        var ha2 = DigestUtils.md5Hex(a2);

        if (qop != null && qop.equals('auth')) {
            return DigestUtils.md5Hex(ha1 + ':' + nonce + ':' + nc + ':' + cnonce + ':' + qop + ':' + ha2);
        }

        return DigestUtils.md5Hex(ha1 + ':' + nonce + ':' + ha2);
    };

    // Generates WWW-Authorization header
    this.generateChallenge = function (realm) {
        var wwwAuthHeader = headerFactory.createWWWAuthenticateHeader('Digest');
        wwwAuthHeader.setRealm(realm);
        wwwAuthHeader.setQop('auth');
        wwwAuthHeader.setOpaque('');
        wwwAuthHeader.setStale(false);
        wwwAuthHeader.setNonce(generateNonce());
        wwwAuthHeader.setAlgorithm(DEFAULT_ALGORITHM);
        return wwwAuthHeader;
    };

    function generateNonce() {
        var date = new Date();
        var time = date.getTime();
        var rand = new Random();
        var pad = rand.nextLong();
        var nonceString = new Long(time).toString() + new Long(pad).toString();
        var messageDigest = MessageDigest.getInstance(DEFAULT_ALGORITHM);
        var mdbytes = messageDigest.digest(nonceString.getBytes());
        return DigestUtils.md5Hex(mdbytes);
    }
}