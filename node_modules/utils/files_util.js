'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @author Pedro Sanders
 * @since v1
 */
var BufferedWriter = Packages.java.io.BufferedWriter;
var File = Packages.java.io.File;
var Files = Packages.java.nio.file.Files;
var FileWriter = Packages.java.io.FileWriter;
var Paths = Packages.java.nio.file.Paths;

var FilesUtil = function () {
    function FilesUtil() {
        _classCallCheck(this, FilesUtil);
    }

    _createClass(FilesUtil, null, [{
        key: 'readFile',
        value: function readFile(path) {
            var lines = Files.readAllLines(Paths.get(path), Packages.java.nio.charset.StandardCharsets.UTF_8);
            var data = [];
            lines.forEach(function (line) {
                data.push(line);
            });
            return data.join('\n').trim();
        }
    }, {
        key: 'writeFile',
        value: function writeFile(path, text) {
            var file = new File(path);
            var out = new BufferedWriter(new FileWriter(file));
            out.write(text);
            out.close();
        }
    }]);

    return FilesUtil;
}();

exports.default = FilesUtil;